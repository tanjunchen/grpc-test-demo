// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: service.proto

package k8s

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 操作
type SyncServiceInfo_Operation int32

const (
	SyncServiceInfo_ADD    SyncServiceInfo_Operation = 0
	SyncServiceInfo_DELETE SyncServiceInfo_Operation = 1
	SyncServiceInfo_UPDATE SyncServiceInfo_Operation = 2
)

// Enum value maps for SyncServiceInfo_Operation.
var (
	SyncServiceInfo_Operation_name = map[int32]string{
		0: "ADD",
		1: "DELETE",
		2: "UPDATE",
	}
	SyncServiceInfo_Operation_value = map[string]int32{
		"ADD":    0,
		"DELETE": 1,
		"UPDATE": 2,
	}
)

func (x SyncServiceInfo_Operation) Enum() *SyncServiceInfo_Operation {
	p := new(SyncServiceInfo_Operation)
	*p = x
	return p
}

func (x SyncServiceInfo_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncServiceInfo_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[0].Descriptor()
}

func (SyncServiceInfo_Operation) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[0]
}

func (x SyncServiceInfo_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncServiceInfo_Operation.Descriptor instead.
func (SyncServiceInfo_Operation) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1, 0}
}

type SyncServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncServiceRequest) Reset() {
	*x = SyncServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncServiceRequest) ProtoMessage() {}

func (x *SyncServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncServiceRequest.ProtoReflect.Descriptor instead.
func (*SyncServiceRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

type SyncServiceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 服务的名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 资源版本号
	ResourceVersion string                    `protobuf:"bytes,2,opt,name=resourceVersion,proto3" json:"resourceVersion,omitempty"`
	Operation       SyncServiceInfo_Operation `protobuf:"varint,3,opt,name=operation,proto3,enum=k8s.SyncServiceInfo_Operation" json:"operation,omitempty"`
	// 创建时间
	CreationTimeStamp string `protobuf:"bytes,4,opt,name=creationTimeStamp,proto3" json:"creationTimeStamp,omitempty"`
	// service 拥有的 labels 标签
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// service 拥有的 selector 标签
	Selector map[string]string `protobuf:"bytes,6,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SyncServiceInfo) Reset() {
	*x = SyncServiceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncServiceInfo) ProtoMessage() {}

func (x *SyncServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncServiceInfo.ProtoReflect.Descriptor instead.
func (*SyncServiceInfo) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *SyncServiceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SyncServiceInfo) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

func (x *SyncServiceInfo) GetOperation() SyncServiceInfo_Operation {
	if x != nil {
		return x.Operation
	}
	return SyncServiceInfo_ADD
}

func (x *SyncServiceInfo) GetCreationTimeStamp() string {
	if x != nil {
		return x.CreationTimeStamp
	}
	return ""
}

func (x *SyncServiceInfo) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *SyncServiceInfo) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

type SyncServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 命名空间
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// service 的事件数据
	SyncServiceInfo []*SyncServiceInfo `protobuf:"bytes,2,rep,name=syncServiceInfo,proto3" json:"syncServiceInfo,omitempty"`
}

func (x *SyncServiceResponse) Reset() {
	*x = SyncServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncServiceResponse) ProtoMessage() {}

func (x *SyncServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncServiceResponse.ProtoReflect.Descriptor instead.
func (*SyncServiceResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *SyncServiceResponse) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SyncServiceResponse) GetSyncServiceInfo() []*SyncServiceInfo {
	if x != nil {
		return x.SyncServiceInfo
	}
	return nil
}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x6b, 0x38, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xdb, 0x03, 0x0a, 0x0f, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x38, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a,
	0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2c, 0x0a, 0x09, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x44, 0x44, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x22, 0x73, 0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3e, 0x0a,
	0x0f, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73, 0x79,
	0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x66, 0x0a,
	0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x54, 0x0a, 0x1b, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x17,
	0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x3b, 0x6b, 0x38, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_service_proto_goTypes = []interface{}{
	(SyncServiceInfo_Operation)(0), // 0: k8s.SyncServiceInfo.Operation
	(*SyncServiceRequest)(nil),     // 1: k8s.SyncServiceRequest
	(*SyncServiceInfo)(nil),        // 2: k8s.SyncServiceInfo
	(*SyncServiceResponse)(nil),    // 3: k8s.SyncServiceResponse
	nil,                            // 4: k8s.SyncServiceInfo.LabelsEntry
	nil,                            // 5: k8s.SyncServiceInfo.SelectorEntry
}
var file_service_proto_depIdxs = []int32{
	0, // 0: k8s.SyncServiceInfo.operation:type_name -> k8s.SyncServiceInfo.Operation
	4, // 1: k8s.SyncServiceInfo.labels:type_name -> k8s.SyncServiceInfo.LabelsEntry
	5, // 2: k8s.SyncServiceInfo.selector:type_name -> k8s.SyncServiceInfo.SelectorEntry
	2, // 3: k8s.SyncServiceResponse.syncServiceInfo:type_name -> k8s.SyncServiceInfo
	1, // 4: k8s.ServiceService.SyncServiceWatchListService:input_type -> k8s.SyncServiceRequest
	3, // 5: k8s.ServiceService.SyncServiceWatchListService:output_type -> k8s.SyncServiceResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncServiceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		EnumInfos:         file_service_proto_enumTypes,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ServiceServiceClient is the client API for ServiceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceServiceClient interface {
	// service 服务的 list watch 事件数据接口
	SyncServiceWatchListService(ctx context.Context, opts ...grpc.CallOption) (ServiceService_SyncServiceWatchListServiceClient, error)
}

type serviceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewServiceServiceClient(cc grpc.ClientConnInterface) ServiceServiceClient {
	return &serviceServiceClient{cc}
}

func (c *serviceServiceClient) SyncServiceWatchListService(ctx context.Context, opts ...grpc.CallOption) (ServiceService_SyncServiceWatchListServiceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ServiceService_serviceDesc.Streams[0], "/k8s.ServiceService/SyncServiceWatchListService", opts...)
	if err != nil {
		return nil, err
	}
	x := &serviceServiceSyncServiceWatchListServiceClient{stream}
	return x, nil
}

type ServiceService_SyncServiceWatchListServiceClient interface {
	Send(*SyncServiceRequest) error
	Recv() (*SyncServiceResponse, error)
	grpc.ClientStream
}

type serviceServiceSyncServiceWatchListServiceClient struct {
	grpc.ClientStream
}

func (x *serviceServiceSyncServiceWatchListServiceClient) Send(m *SyncServiceRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *serviceServiceSyncServiceWatchListServiceClient) Recv() (*SyncServiceResponse, error) {
	m := new(SyncServiceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ServiceServiceServer is the server API for ServiceService service.
type ServiceServiceServer interface {
	// service 服务的 list watch 事件数据接口
	SyncServiceWatchListService(ServiceService_SyncServiceWatchListServiceServer) error
}

// UnimplementedServiceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServiceServiceServer struct {
}

func (*UnimplementedServiceServiceServer) SyncServiceWatchListService(ServiceService_SyncServiceWatchListServiceServer) error {
	return status.Errorf(codes.Unimplemented, "method SyncServiceWatchListService not implemented")
}

func RegisterServiceServiceServer(s *grpc.Server, srv ServiceServiceServer) {
	s.RegisterService(&_ServiceService_serviceDesc, srv)
}

func _ServiceService_SyncServiceWatchListService_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ServiceServiceServer).SyncServiceWatchListService(&serviceServiceSyncServiceWatchListServiceServer{stream})
}

type ServiceService_SyncServiceWatchListServiceServer interface {
	Send(*SyncServiceResponse) error
	Recv() (*SyncServiceRequest, error)
	grpc.ServerStream
}

type serviceServiceSyncServiceWatchListServiceServer struct {
	grpc.ServerStream
}

func (x *serviceServiceSyncServiceWatchListServiceServer) Send(m *SyncServiceResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *serviceServiceSyncServiceWatchListServiceServer) Recv() (*SyncServiceRequest, error) {
	m := new(SyncServiceRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ServiceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "k8s.ServiceService",
	HandlerType: (*ServiceServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SyncServiceWatchListService",
			Handler:       _ServiceService_SyncServiceWatchListService_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "service.proto",
}
